'------------------------------------------------------------------------------
' OMNeT++ MSVC integration
'------------------------------------------------------------------------------
' $Id: omnetpp.dsm 4365 2005-03-30 00:41:42Z omnest $

'
' Contains:
'   addNedFileToProject
'
' Installation:
'
'   1. Select Tools|Macro... --> dialog opens.
'   2. Type any macro name (say "x") and click Edit.
'      --> an editor window opens
'   3. Delete your new ("x") macro and paste the contents
'      of this file in there instead
'   4. Save & close.
'   5. Add toolbar icons: Tools|Macro... --> Options>> -->
'      Toolbars, then drag the macro name to the toolbar.
'   6. That's it. Enjoy!
'

Sub addNEDfileToProject()
'DESCRIPTION: Adds a NED file to the current project

    ' Possible runtime errors:
    '   - no project open
    '   - nedfname or cppfname already exists in project

    ' check if there's a project open
    on error resume next
    set dummy = application.activeProject
    if err then
        msgbox "A project must be open!"
        exit sub
    end if
    on error goto 0

    ' ask if really sure
    question = "Since OMNeT++ 3.0, NED files can be loaded dynamically, " & _
               "and you no longer need to translate them to C++ or add " & _
               "them to the project. To use dynamic loading (recommended), " & _
               "choose Cancel in this dialog, then simply add the " & _
               "preload-ned-files=*.ned line under [General] in omnetpp.ini." & _
               vbLf & vbLf & _
               "Are you sure you want compiled NED files and not dynamic loading?"
    if msgbox(question, 1, "Add NED file to project?") = vbCancel then
        exit sub
    end if

    ' ask NED file name
    nedfname = inputbox("Name of NED file to add: (new or existing file in project directory) ", _
                        "Add NED file to project","untitled.ned")
    if nedfname="" then
        exit sub
    end if

    ' ensure ned file name ends in .ned
    if lcase(right(nedfname,4))<>".ned" then
        nedfname = nedfname & ".ned"
    end if

    ' ned file name should not contain a path
    if instr(nedfname,"\") > 0 then
        msgbox "NED file name must be given without pathname!"
        exit sub
    end if

    ' produce _n.cpp file name
    basefname = left(nedfname,len(nedfname)-4)
    cppfname = basefname & "_n.cpp"

    ' add .ned and _n.cpp files to project
    set proj = application.ActiveProject
    on error resume next
    proj.addFile cppfname
    proj.addFile nedfname
    for each cfg in proj.configurations
        cfg.addCustomBuildStepToFile nedfname, _
               "nedtool -s _n.cpp $(InputPath)", _
               "$(InputName)_n.cpp", _
               "NED Compiling $(InputPath)"
    next
    if err then
        msgbox "Couldn't add "&nedfname&" or "&cppfname& _
               " to project. Maybe it has been added already?"
        exit sub
    end if
    on error goto 0

    ' get project directory
    projfname = proj.fullname
    lastsep = 0
    do while instr(mid(projfname,lastsep+1),"\") > 0
        lastsep = lastsep+instr(mid(projfname,lastsep+1),"\")
    loop
    projdirprefix = left(projfname,lastsep)

    ' open or create NED file in editor
    on error resume next
    nedfileexists = 1
    documents.Open projdirprefix & nedfname, "text"
    if err then
        nedfileexists = 0
    end if
    on error goto 0

    if nedfileexists=0 then
        documents.add "Text"
        set doc = application.activeDocument
        doc.selection = "//-------------------------------" & vbLF
        doc.selection = "// File: " & nedfname & vbLF
        doc.selection = "//-------------------------------" & vbLF
        doc.selection = vbLF
        doc.Save projdirprefix & nedfname
    end if

End Sub


Sub addMSGfileToProject()
'DESCRIPTION: Adds a MSG file to the current project

    ' Possible runtime errors:
    '   - no project open
    '   - msgfname or cppfname already exists in project

    ' check if there's a project open
    on error resume next
    set dummy = application.activeProject
    if err then
        msgbox "A project must be open!"
        exit sub
    end if
    on error goto 0

    ' ask MSG file name
    msgfname = inputbox("Name of MSG file to add: (new or existing file in project directory) ", _
                        "Add MSG file to project","untitled.msg")
    if msgfname="" then
        exit sub
    end if

    ' ensure msg file name ends in .msg
    if lcase(right(msgfname,4))<>".msg" then
        msgfname = msgfname & ".msg"
    end if

    ' msg file name should not contain a path
    if instr(msgfname,"\") > 0 then
        msgbox "MSG file name must be given without pathname!"
        exit sub
    end if

    ' produce _m.cpp file name
    basefname = left(msgfname,len(msgfname)-4)
    cppfname = basefname & "_m.cpp"

    ' add .msg and _m.cpp files to project
    set proj = application.ActiveProject
    on error resume next
    proj.addFile cppfname
    proj.addFile msgfname
    for each cfg in proj.configurations
        cfg.addCustomBuildStepToFile msgfname, _
               "call opp_msgc -s _m.cpp $(InputPath)", _
               "$(InputName)_m.cpp", _
               "Generating C++ from $(InputPath)"
    next
    if err then
        msgbox "Couldn't add "&msgfname&" or "&cppfname& _
               " to project. Maybe it has been added already?"
        exit sub
    end if
    on error goto 0

    ' get project directory
    projfname = proj.fullname
    lastsep = 0
    do while instr(mid(projfname,lastsep+1),"\") > 0
        lastsep = lastsep+instr(mid(projfname,lastsep+1),"\")
    loop
    projdirprefix = left(projfname,lastsep)

    ' open or create MSG file in editor
    on error resume next
    msgfileexists = 1
    documents.Open projdirprefix & msgfname, "text"
    if err then
        msgfileexists = 0
    end if
    on error goto 0

    if msgfileexists=0 then
        documents.add "Text"
        set doc = application.activeDocument
        doc.selection = "//-------------------------------" & vbLF
        doc.selection = "// File: " & msgfname & vbLF
        doc.selection = "//-------------------------------" & vbLF
        doc.selection = vbLF
        doc.Save projdirprefix & msgfname
    end if

End Sub

