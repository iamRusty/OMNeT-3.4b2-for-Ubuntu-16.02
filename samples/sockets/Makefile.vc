#
#  Makefile for sockets
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -N
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = sockets.exe

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH=

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# time stamps of other directories (used as dependency)
EXT_DIR_TSTAMPS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "../../configuser.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=sim_std.lib

!if "$(WITH_NETBUILDER)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) nedxml.lib $(XML_LIBS)
!endif

!if "$(WITH_PARSIM)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) $(MPI_LIBS)
!endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= httpmsg_m.obj netpkt_m.obj telnetpkt_m.obj cloud.obj csocketrtscheduler.obj exthttpclient.obj exttelnetclient.obj httpclient.obj httpserver.obj queuebase.obj telnetclient.obj telnetserver.obj

# header files generated (from msg files)
GENERATEDHEADERS= httpmsg_m.h netpkt_m.h telnetpkt_m.h

# subdirectories to recurse into
SUBDIRS= 
SUBDIR_TARGETS= 

$(TARGET): $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_TSTAMPS)  Makefile.vc
	$(LINK) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) $(OMNETPP_LIBS) /out:$(TARGET)
	@echo.>.tstamp

$(OBJS) : $(GENERATEDHEADERS)

# purify: $(OBJS) $(EXTRA_OBJS)  Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

subdirs: $(SUBDIR_TARGETS)

httpmsg_m.obj: httpmsg_m.cpp
	$(CXX) -c $(NEDCOPTS) /Tp httpmsg_m.cpp

httpmsg_m.cpp httpmsg_m.h: httpmsg.msg
	$(MSGC:/=\) -s _m.cpp $(INCLUDE_PATH) httpmsg.msg

netpkt_m.obj: netpkt_m.cpp
	$(CXX) -c $(NEDCOPTS) /Tp netpkt_m.cpp

netpkt_m.cpp netpkt_m.h: netpkt.msg
	$(MSGC:/=\) -s _m.cpp $(INCLUDE_PATH) netpkt.msg

telnetpkt_m.obj: telnetpkt_m.cpp
	$(CXX) -c $(NEDCOPTS) /Tp telnetpkt_m.cpp

telnetpkt_m.cpp telnetpkt_m.h: telnetpkt.msg
	$(MSGC:/=\) -s _m.cpp $(INCLUDE_PATH) telnetpkt.msg

cloud.obj: cloud.cpp
	$(CXX) -c $(COPTS) /Tp cloud.cpp

csocketrtscheduler.obj: csocketrtscheduler.cpp
	$(CXX) -c $(COPTS) /Tp csocketrtscheduler.cpp

exthttpclient.obj: exthttpclient.cpp
	$(CXX) -c $(COPTS) /Tp exthttpclient.cpp

exttelnetclient.obj: exttelnetclient.cpp
	$(CXX) -c $(COPTS) /Tp exttelnetclient.cpp

httpclient.obj: httpclient.cpp
	$(CXX) -c $(COPTS) /Tp httpclient.cpp

httpserver.obj: httpserver.cpp
	$(CXX) -c $(COPTS) /Tp httpserver.cpp

queuebase.obj: queuebase.cpp
	$(CXX) -c $(COPTS) /Tp queuebase.cpp

telnetclient.obj: telnetclient.cpp
	$(CXX) -c $(COPTS) /Tp telnetclient.cpp

telnetserver.obj: telnetserver.cpp
	$(CXX) -c $(COPTS) /Tp telnetserver.cpp


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

generateheaders: $(GENERATEDHEADERS)
	@if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do @cd %%i && echo [opp_msgc in %%i] && nmake /nologo /f Makefile.vc generateheaders && cd .. || exit /b 1

clean:
	-del *.obj .tstamp *.idb *.pdb *.ilk *.exp $(TARGET) $(TARGET:.exe=.lib) $(TARGET:.dll=.lib) 2>NUL
	-del *_n.cpp *_n.h *_m.cpp *_m.h 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && echo [clean in %%i] && nmake /nologo /f Makefile.vc clean && cd .. || exit /b 1

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cpp
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && echo [depend in %%i] && nmake /nologo /f Makefile.vc depend && cd .. || exit /b 1

makefiles:
	opp_nmakemake -f  -N 
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && echo [makemake in %%i] && nmake /nologo /f Makefile.vc makefiles && cd .. || exit /b 1

# "re-makemake" is a deprecated, historic name of the above target
re-makemake: makefiles

# DO NOT DELETE THIS LINE -- make depend depends on it.
cloud.obj: cloud.cpp \
  netpkt_m.h
csocketrtscheduler.obj: csocketrtscheduler.cpp \
  csocketrtscheduler.h
exthttpclient.obj: exthttpclient.cpp \
  httpmsg_m.h \
  csocketrtscheduler.h \
  netpkt_m.h
exttelnetclient.obj: exttelnetclient.cpp \
  telnetpkt_m.h \
  csocketrtscheduler.h \
  netpkt_m.h
httpclient.obj: httpclient.cpp \
  httpmsg_m.h \
  netpkt_m.h
httpmsg_m.obj: httpmsg_m.cpp \
  httpmsg_m.h \
  netpkt_m.h
httpserver.obj: httpserver.cpp \
  httpserver.h \
  httpmsg_m.h \
  queuebase.h \
  netpkt_m.h
netpkt_m.obj: netpkt_m.cpp \
  netpkt_m.h
queuebase.obj: queuebase.cpp \
  queuebase.h
telnetclient.obj: telnetclient.cpp \
  telnetpkt_m.h \
  netpkt_m.h
telnetpkt_m.obj: telnetpkt_m.cpp \
  telnetpkt_m.h \
  netpkt_m.h
telnetserver.obj: telnetserver.cpp \
  telnetserver.h \
  telnetpkt_m.h \
  queuebase.h \
  netpkt_m.h
